worker_processes  1;

events {
    worker_connections  1024;
}

http {
    # pyscada.conf

    # the upstream component nginx needs to connect to
    upstream app_server {
            server pyscada:8000 fail_timeout=0; # for a file socket
    }

    # configuration of the server
    server {
        listen      80;
        listen   [::]:80;
        server_name _;          # substitute your machine's IP address or FQDN
        return 301 https://$host$request_uri;
    }

    server {
            listen   443 default_server ssl;
            listen [::]:443 ssl;

            server_name _;          # substitute your machine's IP address or FQDN

            charset utf-8;
            keepalive_timeout 5;
            client_max_body_size 75M;   # max upload size, adjust to taste
            # please comment if https is not used
            ssl_certificate     /etc/nginx/ssl/pyscada_server.crt; # The certificate file
            ssl_certificate_key /etc/nginx/ssl/pyscada_server.key; # The private key file

            # Django media
            location /media  {
                    alias /var/www/http/media;  # your Django project's media files - amend as required
            }

            location /static {
                    alias /var/www/http/static; # your Django project's static files - amend as required
            }

            location /measurement {
                    alias /var/www/http/measurement_data_dumps; # to support download of measurement files via admin backend - amend as required
            }

            location / {
                # checks for static file, if not found proxy to app
                try_files $uri @proxy_to_app;
            }

            location @proxy_to_app {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_redirect off;
                proxy_pass   http://app_server;
            }
    }
}