worker_processes 1;

events { worker_connections 1024; }

http {

    sendfile on;

    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   500;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/x-javascript
                      application/atom+xml;

    # List of application servers
    # the upstream component nginx needs to connect to
    upstream django {
      server unix:/srv/PyScadaServer/run/gunicorn.sock fail_timeout=0; # for a file socket
    }


    # configuration of the server
  	server {
  		# the port your site will be served on
  		listen      80;
  		# the domain name it will serve for
  		server_name .example.com; # substitute your machine's IP address or FQDN
  		charset     utf-8;

  		# max upload size
  		client_max_body_size 75M;   # adjust to taste

  		# Django media
  		location /media  {
  			alias /srv/PyScadaServer/media;  # your Django project's media files - amend as required
  		}

  		location /static {
  			alias /srv/PyScadaServer/static; # your Django project's static files - amend as required
  		}
  		location / {
  			# an HTTP header important enough to have its own Wikipedia entry:
  			#   http://en.wikipedia.org/wiki/X-Forwarded-For
  			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  			# enable this if and only if you use HTTPS, this helps Rack
  			# set the proper protocol for doing redirects:
  			# proxy_set_header X-Forwarded-Proto https;

  			# pass the Host: header from the client right along so redirects
  			# can be set properly within the Rack application
  			proxy_set_header Host $http_host;

  			# we don't want nginx trying to do something clever with
  			# redirects, we set the Host: header above already.
  			proxy_redirect off;

  			# set "proxy_buffering off" *only* for Rainbows! when doing
  			# Comet/long-poll stuff.  It's also safe to set if you're
  			# using only serving fast clients with Unicorn + nginx.
  			# Otherwise you _want_ nginx to buffer responses to slow
  			# clients, really.
  			# proxy_buffering off;

  			# Try to serve static files from nginx, no point in making an
  			# *application* server like Unicorn/Rainbows! serve static files.
  			if (!-f $request_filename) {
  				proxy_pass http://django;
  				break;
  			}
  		}
  	}
}
